swagger: '2.0'
info:
  title: Backend API
  version: '1'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

paths:
  /:
    get:
      summary: Retrieve the API spec
      description: Returns the current specification of this API.
      security:
        - member_token: []
      tags:
        - API
      responses:
        200:
          description: OpenAPI/Swagger 2.0 definition of this API.
          schema:
            $ref: '#'
        default:
          $ref: '#/responses/Error'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: GET
        uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/\
          functions/${GetApi.Arn}/invocations"
  /projects:
    get:
      summary: Search projects
      description: |
        Returns a list of projects for the current member,
        filtered by optional parameters.

        **requires scopes:  
        *projects:describe*,
        *projects:describe_details (conditional)*
        **
      security:
        - member_token: []
      tags:
        - Projects
      parameters:
        - $ref: '#/parameters/ProjectsQueryNameContains'
        - $ref: '#/parameters/ProjectsQueryIsMember'
        - $ref: '#/parameters/ProjectsQueryIsHidden'
        - $ref: '#/parameters/ProjectsQueryStatus'
        - $ref: '#/parameters/ProjectsQueryIRB'
        - $ref: '#/parameters/QueryPaginationFrom'
        - $ref: '#/parameters/QueryPaginationMax'
      responses:
        200:
          $ref: '#/responses/ListOfProjects'
        default:
          $ref: '#/responses/Error'
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: GET
        uri: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/\
          functions/${GetProjects.Arn}/invocations"

definitions:
  Project:
    required:
      - id
      - name
      - status
    properties:
      id:
        $ref: '#/definitions/ProjectId'
      name:
        $ref: '#/definitions/ProjectName'
      hidden:
        $ref: '#/definitions/ProjectHidden'
      status:
        $ref: '#/definitions/ProjectStatus'
      IRB:
        $ref: '#/definitions/ProjectIRB'
  ProjectId:
    description: Unique identifier for a project
    type: string
    format: uuid
  ProjectName:
    description: Project name
    type: string
    pattern: ^[\w-., ]{1,100}$
  ProjectHidden:
    description:
      Indicates whether project name and status are hidden from public view
    type: boolean
  ProjectStatus:
    description: Project status
    type: string
    enum:
      - Available
      - Removed
  ProjectIRB:
    description: project IRB identifier
    type: string
    pattern: ^[\w-.]{1,100}$
  ListOfProjects:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
      next:
        $ref: '#/definitions/PaginationNext'
  PaginationNext:
    type: integer
    minimum: 1
  Error:
    properties:
      message:
        type: string

parameters:
  ProjectsQueryNameContains:
    in: query
    name: name_contains
    description: part of project name, case-insensitive
    type: string
    pattern: ^[\w-., ]{1,100}$
  ProjectsQueryIsMember:
    in: query
    name: is_member
    description: filter projects by requester's membership
    type: boolean
  ProjectsQueryIsHidden:
    in: query
    name: is_hidden
    description: |
      filter by project 'hidden' flag

      **requires scope:  
      *projects:describe_details*
      **
    type: boolean
  ProjectsQueryStatus:
    in: query
    name: status
    description: filter by project status
    type: string
    enum:
      - Available
      - Removed
  ProjectsQueryIRB:
    in: query
    name: irb
    description: |
      project IRB (might not be unique)

      **requires scope:  
      *projects:describe_details*
      **
    type: string
    pattern: ^[\w-.]{1,100}$
  QueryPaginationFrom:
    in: query
    name: from
    description: starting index for pagination
    type: integer
    minimum: 0
    default: 0
  QueryPaginationMax:
    in: query
    name: max
    description: maximum count of paginated results
    type: integer
    minimum: 1
    default: 10

responses:
  ListOfProjects:
    description: List of projects
    schema:
      $ref: '#/definitions/ListOfProjects'
  Error:
    description: Error response
    schema:
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/definitions/Error'

securityDefinitions:
  member_token:
    type: apiKey
    in: header
    name: Authorization
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      type: token
      authorizerUri: "\
        arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/\
        functions/${Authorizer.Arn}/invocations"
      authorizerCredentials: ${AuthorizerInvocationRole.Arn}
      identityValidationExpression: '^[\w-]{36,}\.[\w-]{128,}\.[\w-]{256,}$'
      authorizerResultTtlInSeconds: 60
