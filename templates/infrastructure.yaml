Parameters:
  BackendRepo:
    Description: "Name of CodeCommit repository for the backend (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: backend
  FrontendRepo:
    Description: "Name of CodeCommit repository for the frontend (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: frontend
  FrontendAuthRepo:
    Description: "Name of CodeCommit repository for frontend authentication (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: frontend-auth
  StackAdmin:
    Description: "IAM user whom to allow to administer this stack, including encryption keys"
    Type: String
    AllowedPattern: ^[\w+=.,@-]{0,64}$
    Default: ''
  NotificationEmail:
    Description: "Email for notifying about pipeline updates"
    Type: String
    AllowedPattern: ^(|[\w\.-]+@[\w\.-]+\.[a-z\.]{2,6})$
    Default: ''
  BetaVPCRange:
    Description: "CIDR block of IP addresses for EC2 instances in 'Beta' environment (*)"
    Type: String
    AllowedPattern: ^(10|172|192)(\.(1?\d{0,2}|2[0-4]\d|25[0-5])){3}/(1[6-9]|2[0-8])$
    Default: 10.0.0.0/16
  ProductionVPCRange:
    Description: "CIDR block of IP addresses for EC2 instances in 'Production' environment (*)"
    Type: String
    AllowedPattern: ^(10|172|192)(\.(1?\d{0,2}|2[0-4]\d|25[0-5])){3}/(1[6-9]|2[0-8])$
    Default: 10.1.0.0/16
  Domain:
    Description: "Registered domain name for the entire infrastructure (*)"
    Type: String
    AllowedPattern: ^[a-z][a-z0-9\.]*\.[a-z]+$
  HostedZone:
    Description: "Route 53 hosted zone ID, if created previously for this domain"
    Type: String
    AllowedPattern: ^[A-Z0-9]{0,32}$
    Default: ''
  WebTTL:
    Description: "How long static files for the web site will be cached [sec] (*)"
    Type: Number
    MinValue: 0
    Default: 300
  WebPriceClass:
    Description: "Price class for the web (CloudFront) cache (*)"
    Type: String
    AllowedValues: [100, 200, All]
    Default: 100
  WebLocations:
    Description: "Comma-separated country codes where the web site will be distributed \
      [ISO 3166-1 alpha-2 format, without spaces] (*)"
    Type: String
    AllowedPattern: ^[A-Z]{2}(,[A-Z]{2})*$
    Default: US
  WebFirewallRanges:
    Description: "Comma-separated CIDR blocks that should have access to the website [without spaces] (*)"
    Type: String
    AllowedPattern: "\
      ^(1?\\d{0,2}|2[0-4]\\d|25[0-5])(\\.(1?\\d{0,2}|2[0-4]\\d|25[0-5])){3}/([1-2]?[0-9]|3[0-2])\
      (,(1?\\d{0,2}|2[0-4]\\d|25[0-5])(\\.(1?\\d{0,2}|2[0-4]\\d|25[0-5])){3}/([1-2]?[0-9]|3[0-2]))*$"
    Default: 0.0.0.0/0
  Auth0Domain:
    Description: "Your Auth0 domain name (*)"
    Type: String
    AllowedPattern: ^[a-z][a-z0-9\.]*\.[a-z]+$
  Auth0Connections:
    Description: "Comma-separated names of Auth0 connections for frontend authentication \
      [without spaces] (*)"
    Type: String
    AllowedPattern: ^[\w-]+(,[\w-]+)*$
    Default: google-oauth2
  Auth0ManagementClientID:
    Description: "Your Auth0 Management cliend ID (*)"
    Type: String
    MinLength: 1
  Auth0ManagementClientSecret:
    Description: "Your Auth0 Management cliend secret (*)"
    Type: String
    NoEcho: true
    MinLength: 1
  Auth0UserTokenLifetime:
    Description: "Number of seconds that user tokens are valid for (*)"
    Type: Number
    MinValue: 1
    Default: 36000

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Repositories"
        Parameters:
          - BackendRepo
          - FrontendRepo
          - FrontendAuthRepo
      -
        Label:
          default: "Administration"
        Parameters:
          - StackAdmin
          - NotificationEmail
      -
        Label:
          default: "Network"
        Parameters:
          - BetaVPCRange
          - ProductionVPCRange
      -
        Label:
          default: "Web"
        Parameters:
          - Domain
          - HostedZone
          - WebTTL
          - WebPriceClass
          - WebLocations
          - WebFirewallRanges
      -
        Label:
          default: "Auth0"
        Parameters:
          - Auth0Domain
          - Auth0Connections
          - Auth0ManagementClientID
          - Auth0ManagementClientSecret
          - Auth0UserTokenLifetime

Conditions:
  EnableStackAdmin: !Not [!Equals [!Ref StackAdmin, '']]
  CreateNotification: !Not [!Equals [!Ref NotificationEmail, '']]
  CreateHostedZone: !Equals [!Ref HostedZone, '']

Resources:
  BackendArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  FrontendArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  SecretsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  BetaWebBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  ReleaseWebBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  DomainZone:
    Type: AWS::Route53::HostedZone
    Condition: CreateHostedZone
    DeletionPolicy: Retain
    Properties:
      Name: !Ref Domain

  PipelineNotification:
    Type: AWS::SNS::Topic
    Condition: CreateNotification
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email

  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: backend
      RoleArn: !GetAtt BackendPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BackendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref BackendRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Build
          Actions:
            -
              Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BackendBuildProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Package
        -
          Name: Package
          Actions:
            -
              Name: Package
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BackendPackageProject
              InputArtifacts:
                - Name: Package
        -
          Name: Beta
          Actions:
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
            -
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Deploy
                StackName: !Sub backend-beta
              RunOrder: 2
        -
          Name: Release
          Actions:
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
            -
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Deploy
                StackName: !Sub backend-release
              RunOrder: 2

  BackendBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: backend-build
      ServiceRole: !Ref BackendBuildRole
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:6.3.1
        ComputeType: BUILD_GENERAL1_SMALL
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE

  BackendPackageProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: backend-package
      ServiceRole: !Ref BackendPackageRole
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/ubuntu-base:14.04
        ComputeType: BUILD_GENERAL1_SMALL
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub
          - |-
            version: 0.1
            phases:
              install:
                commands:
                  - pip install --upgrade awscli

              build:
                commands:
                  - aws s3 cp api/swagger/swagger.yaml s3://${BackendArtifactsBucket}
                  - |-
                    aws cloudformation package \
                      --template-file templates/backend.yaml \
                      --output-template-file backend.yaml \
                      --s3-bucket ${BackendArtifactsBucket} \
                      --s3-prefix lambda

                  - aws s3 cp backend.yaml s3://${BackendArtifactsBucket}

              post_build:
                commands:
                  - |-
                    cfm="aws cloudformation" &&

                    create_change_set() {
                      local stack_name="$1"
                      local vpc_range="$2"
                      local web_domain="$3"
                      local web_bucket="$4"
                      local auth0_secret="$5"
                      local signing_put_role="$6"
                      local change_set="--stack-name $stack_name --change-set-name Deploy"

                      local args=" \
                        $change_set \
                        --template-url https://${BackendArtifactsBucket}.s3.amazonaws.com/backend.yaml \
                        --role-arn ${BackendDeploymentRole.Arn} \
                        --capabilities CAPABILITY_IAM \
                        --parameters \
                          ParameterKey=ArtifactsBucket,ParameterValue=${BackendArtifactsBucket} \
                          ParameterKey=VpcRange,ParameterValue=$vpc_range \
                          ParameterKey=EncryptionKeyId,ParameterValue=${EncryptionKey} \
                          ParameterKey=SecretsBucket,ParameterValue=${SecretsBucket} \
                          ParameterKey=SSHKeyName,ParameterValue=$stack_name \
                          ParameterKey=SSHKeyS3Path,ParameterValue=ssh/$stack_name.pem \
                          ParameterKey=SSHKeyPutRole,ParameterValue=${SSHKeyPutRole} \
                          ParameterKey=SSHKeyGetRole,ParameterValue=${SSHKeyGetRole} \
                          ParameterKey=DomainZone,ParameterValue=${HostedZoneId} \
                          ParameterKey=APIDomain,ParameterValue=api.$web_domain \
                          ParameterKey=WebDomain,ParameterValue=$web_domain \
                          ParameterKey=WebBucket,ParameterValue=$web_bucket \
                          ParameterKey=WebTTL,ParameterValue=${WebTTL} \
                          ParameterKey=WebPriceClass,ParameterValue=${WebPriceClass} \
                          ParameterKey=WebLocations,ParameterValue=${WebLocations} \
                          ParameterKey=WebFirewallRanges,ParameterValue=${WebFirewallRanges} \
                          ParameterKey=WebSigningKeyPutRole,ParameterValue=$signing_put_role \
                          ParameterKey=WebSigningKeyGetRole,ParameterValue=${WebSigningKeyGetRole} \
                          ParameterKey=Auth0Domain,ParameterValue=${Auth0Domain} \
                          ParameterKey=Auth0ManagementClientID,ParameterValue=${Auth0ManagementClientID} \
                          ParameterKey=Auth0ManagementClientSecret,ParameterValue=$auth0_secret \
                          ParameterKey=Auth0UserTokenLifetime,ParameterValue=${Auth0UserTokenLifetime} \
                          ParameterKey=Auth0PutSecretRoleArn,ParameterValue=${Auth0PutSecretRole.Arn} \
                          ParameterKey=Auth0GetManagementSecretRoleArn,ParameterValue=${Auth0GetManagementSecretRole.Arn} \
                          ParameterKey=Auth0CreateClientRoleArn,ParameterValue=${Auth0CreateClientRole.Arn} "

                      $cfm delete-change-set $change_set || true
                      $cfm create-change-set $args || $cfm create-change-set --change-set-type CREATE $args
                    } &&

                    create_change_set backend-beta "${BetaVPCRange}" "beta.${Domain}" "${BetaWebBucket}" \
                      "${Auth0ManagementClientSecret}" "${WebSigningKeyPutRole}" &&

                    create_change_set backend-release "${ProductionVPCRange}" "${Domain}" "${ReleaseWebBucket}" &&

                    wait_change_set() {
                      local stack_name="$1"
                      local change_set="--stack-name $stack_name --change-set-name Deploy"

                      $cfm wait change-set-create-complete $change_set
                    } &&

                    wait_change_set backend-beta &&
                    wait_change_set backend-release

          - HostedZoneId: !If [CreateHostedZone, !Ref DomainZone, !Ref HostedZone]

  EncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/backend
      TargetKeyId: !Ref EncryptionKey

  EncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt SSHKeyPutRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt SSHKeyGetRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt Auth0PutSecretRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt Auth0CreateClientRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-client.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt Auth0GetManagementSecretRole.Arn
                - !GetAtt Auth0CreateClientRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt FrontendAuthBuildRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-api-test-client.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt WebSigningKeyPutRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt WebSigningKeyGetRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
            Resource: '*'
          - Effect: Deny
            NotPrincipal:
              AWS:
              - !Ref AWS::AccountId

              - !GetAtt SSHKeyPutRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyPutRole}/backend-beta-CreateSSHKey"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyPutRole}/backend-release-CreateSSHKey"

              - !GetAtt SSHKeyGetRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyGetRole}/backend-beta-TransferInitScript"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyGetRole}/backend-release-TransferInitScript"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyGetRole}/backend-beta-ExecuteInitScript"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${SSHKeyGetRole}/backend-release-ExecuteInitScript"

              - !GetAtt Auth0PutSecretRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0PutSecretRole}/backend-beta-RotateAndStoreAuth0ManagementSecret"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0PutSecretRole}/backend-release-RotateAndStoreAuth0ManagementSecret"

              - !GetAtt Auth0CreateClientRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0CreateClientRole}/backend-beta-CreateAuth0Client"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0CreateClientRole}/backend-release-CreateAuth0Client"

              - !GetAtt Auth0GetManagementSecretRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0GetManagementSecretRole}/backend-beta-ManageAuth0Resource"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${Auth0GetManagementSecretRole}/backend-release-ManageAuth0Resource"

              - !GetAtt FrontendAuthBuildRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${FrontendAuthBuildRole}/AWSCodeBuild"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${FrontendAuthBuildRole}/AWSCodeBuild"

              - !GetAtt WebSigningKeyPutRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${WebSigningKeyPutRole}/backend-beta-CreateAndExportWebSigningKeyPair"

              - !GetAtt WebSigningKeyGetRole.Arn
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${WebSigningKeyGetRole}/backend-beta-GenerateSignedCookies"
              - !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/\
                      ${WebSigningKeyGetRole}/backend-release-GenerateSignedCookies"

              - !If
                - EnableStackAdmin
                - !Sub arn:aws:iam::${AWS::AccountId}:user/${StackAdmin}
                - !Ref AWS::NoValue
            Action:
              - kms:*
            Resource: '*'

  BackendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${BackendRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt BackendBuildProject.Arn
                  - !GetAtt BackendPackageProject.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-beta/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-release/*
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  BackendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/Source/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/Package/*

  BackendPackageRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BackendPackagePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/Package/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend.yaml
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/lambda/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend.yaml
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/swagger.yaml
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DeleteChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-beta/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-release/*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt BackendDeploymentRole.Arn

  BackendDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeployPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
                  - !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/Include
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PassRole
                  - iam:DeleteRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-beta-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-release-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt SSHKeyPutRole.Arn
                  - !GetAtt SSHKeyGetRole.Arn
                  - !GetAtt Auth0PutSecretRole.Arn
                  - !GetAtt Auth0GetManagementSecretRole.Arn
                  - !GetAtt Auth0CreateClientRole.Arn
                  - !GetAtt WebSigningKeyPutRole.Arn
                  - !GetAtt WebSigningKeyGetRole.Arn
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                Condition:
                  ArnLike:
                    'iam:PolicyArn':
                      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-beta-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-release-*
              - Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                Resource:
                  - !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/lambda/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/swagger.yaml
              - Effect: Allow
                Action:
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:backend-*
              - Effect: Allow
                Action:
                  - events:DescribeRule
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/backend-*
              - Effect: Allow
                Action:
                  - ec2:CreateVpc
                  - ec2:CreateVpcEndpoint
                  - ec2:CreateRouteTable
                  - ec2:CreateRoute
                  - ec2:CreateInternetGateway
                  - ec2:CreateTags
                  - ec2:DescribeVpcs
                  - ec2:DescribeVpcEndpoints
                  - ec2:DescribeRouteTables
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeAccountAttributes
                  - ec2:AttachInternetGateway
                  - ec2:ModifyVpcAttribute
                  - ec2:DeleteVpc
                  - ec2:DeleteVpcEndpoints
                  - ec2:DetachInternetGateway
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DeleteRouteTable
                  - ec2:DeleteRoute
                  - ec2:DeleteInternetGateway
                Condition:
                  StringLike:
                    'ec2:ResourceTag/Name': !Sub backend-*
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
              - Effect: Allow
                Action:
                  - ec2:DescribeKeyPairs
                Resource: '*'
              - Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:PATCH
                  - apigateway:DELETE
                Resource:
                  - !Sub arn:aws:apigateway:${AWS::Region}::/restapis*
                  - !Sub arn:aws:apigateway:${AWS::Region}::/usageplans*
                  - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/api.*${Domain}/basepathmappings
              - Effect: Allow
                Action:
                  - acm:RequestCertificate
                  - acm:DescribeCertificate
                  - acm:DeleteCertificate
                Resource: '*'
              - Effect: Allow
                Action:
                  - waf:GetChangeToken
                  - waf:GetChangeTokenStatus
                Resource:
                  - !Sub arn:aws:waf::${AWS::AccountId}:changetoken/*
              - Effect: Allow
                Action:
                  - waf:CreateWebACL
                  - waf:GetWebACL
                  - waf:UpdateWebACL
                  - waf:DeleteWebACL
                Resource:
                  - !Sub arn:aws:waf::${AWS::AccountId}:webacl/*
              - Effect: Allow
                Action:
                  - waf:CreateRule
                  - waf:GetRule
                  - waf:UpdateRule
                  - waf:DeleteRule
                Resource:
                  - !Sub arn:aws:waf::${AWS::AccountId}:rule/*
              - Effect: Allow
                Action:
                  - waf:CreateIPSet
                  - waf:GetIPSet
                  - waf:UpdateIPSet
                  - waf:DeleteIPSet
                Resource:
                  - !Sub arn:aws:waf::${AWS::AccountId}:ipset/*
              - Effect: Allow
                Action:
                  - cloudfront:CreateDistribution
                  - cloudfront:GetDistribution
                  - cloudfront:GetDistributionConfig
                  - cloudfront:UpdateDistribution
                  - cloudfront:DeleteDistribution
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                Resource:
                  - !If
                    - CreateHostedZone
                    - !Sub arn:aws:route53:::hostedzone/${DomainZone}
                    - !Sub arn:aws:route53:::hostedzone/${HostedZone}
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource: '*'

  SSHKeyPutRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SSHKeyPutPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ec2:CreateKeyPair
                Resource: '*'
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem

  SSHKeyGetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: SSHKeyGetPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem

  Auth0PutSecretRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0PutSecretPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*

  Auth0GetManagementSecretRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0GetManagementSecretPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key

  Auth0CreateClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0CreateClientPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-client.key

  WebSigningKeyPutRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WebSigningKeyPutPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem

  WebSigningKeyGetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WebSigningKeyGetPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
              - Effect: Allow
                Action: cloudfront:GetDistribution
                Resource: '*'

  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: frontend
      RoleArn: !GetAtt FrontendPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref FrontendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref FrontendRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Beta
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendBetaBuildProject
              InputArtifacts:
                - Name: Source
        -
          Name: Approval
          Actions:
            - Name: ApproveRelease
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
        -
          Name: Release
          Actions:
            -
              Name: Release
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendReleaseBuildProject
              InputArtifacts:
                - Name: Source

  FrontendBetaBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendRepo}-beta
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: WEB_BUCKET
            Value: !Ref BetaWebBucket
      ServiceRole: !Ref FrontendBuildRole

  FrontendReleaseBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendRepo}-release
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: WEB_BUCKET
            Value: !Ref ReleaseWebBucket
      ServiceRole: !Ref FrontendBuildRole

  FrontendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FrontendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${FrontendRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt FrontendBetaBuildProject.Arn
                  - !GetAtt FrontendReleaseBuildProject.Arn
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  FrontendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}/app/*
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}/app/*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}

  FrontendAuthPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: frontend-auth
      RoleArn: !GetAtt FrontendAuthPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref FrontendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref FrontendAuthRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Beta
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendAuthBetaBuildProject
              InputArtifacts:
                - Name: Source
        -
          Name: Approval
          Actions:
            - Name: ApproveRelease
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
        -
          Name: Release
          Actions:
            -
              Name: Release
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendAuthReleaseBuildProject
              InputArtifacts:
                - Name: Source

  FrontendAuthBetaBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendAuthRepo}-beta
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: WEB_BUCKET
            Value: !Ref BetaWebBucket
          - Name: STACK_NAME
            Value: backend-beta
          - Name: API_DOMAIN
            Value: !Sub api.beta.${Domain}
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_CONNECTIONS
            Value: !Ref Auth0Connections
      ServiceRole: !Ref FrontendAuthBuildRole

  FrontendAuthReleaseBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendAuthRepo}-release
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: WEB_BUCKET
            Value: !Ref ReleaseWebBucket
          - Name: STACK_NAME
            Value: backend-release
          - Name: API_DOMAIN
            Value: !Sub api.${Domain}
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_CONNECTIONS
            Value: !Ref Auth0Connections
      ServiceRole: !Ref FrontendAuthBuildRole

  FrontendAuthPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FrontendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${FrontendAuthRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt FrontendAuthBetaBuildProject.Arn
                  - !GetAtt FrontendAuthReleaseBuildProject.Arn
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  FrontendAuthBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/auth0/*-spa.id
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/auth0/*-api-test-client.id
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-api-test-client.key
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}/login.*
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}/login.*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}

Outputs:
  BackendPipelineUrl:
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${BackendPipeline}'
  FrontendPipelineUrl:
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${FrontendPipeline}'