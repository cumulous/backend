Parameters:
  BackendRepo:
    Description: "Name of CodeCommit repository for the backend (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: backend
  FrontendRepo:
    Description: "Name of CodeCommit repository for the frontend (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: frontend
  FrontendAuthRepo:
    Description: "Name of CodeCommit repository for frontend authentication (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: frontend-auth
  AppsRepo:
    Description: "Name of CodeCommit repository for analysis apps (packaged through Docker) (*)"
    Type: String
    AllowedPattern: ^[\w.-]{1,100}$
    Default: apps
  StackAdmin:
    Description: "IAM user whom to allow to administer this stack, including encryption keys (*)"
    Type: String
    AllowedPattern: ^[\w+=.,@-]{0,64}$
  NotificationEmail:
    Description: "Email for notifying about pipeline updates"
    Type: String
    AllowedPattern: ^(|[\w\.-]+@[\w\.-]+\.[a-z\.]{2,6})$
    Default: ''
  BetaVPCRange:
    Description: "CIDR block of IP addresses for EC2 instances in 'Beta' environment (*)"
    Type: String
    AllowedPattern: ^(10|172|192)(\.(1?\d{0,2}|2[0-4]\d|25[0-5])){3}/(1[6-9]|2[0-8])$
    Default: 10.0.0.0/16
  ProductionVPCRange:
    Description: "CIDR block of IP addresses for EC2 instances in 'Production' environment (*)"
    Type: String
    AllowedPattern: ^(10|172|192)(\.(1?\d{0,2}|2[0-4]\d|25[0-5])){3}/(1[6-9]|2[0-8])$
    Default: 10.1.0.0/16
  Domain:
    Description: "Registered domain name for the entire infrastructure (*)"
    Type: String
    AllowedPattern: ^[a-z][a-z0-9\.]*\.[a-z]+$
  HostedZone:
    Description: "Route 53 hosted zone ID, if created previously for this domain"
    Type: String
    AllowedPattern: ^[A-Z0-9]{0,32}$
    Default: ''
  WebTTL:
    Description: "How long static files for the web site will be cached [sec] (*)"
    Type: Number
    MinValue: 0
    Default: 300
  WebPriceClass:
    Description: "Price class for the web (CloudFront) cache (*)"
    Type: String
    AllowedValues: [100, 200, All]
    Default: 100
  WebLocations:
    Description: "Comma-separated country codes where the web site will be distributed \
      [ISO 3166-1 alpha-2 format, without spaces] (*)"
    Type: String
    AllowedPattern: ^[A-Z]{2}(,[A-Z]{2})*$
    Default: US
  WebFirewallRanges:
    Description: "Comma-separated CIDR blocks that should have access to the website [without spaces] (*)"
    Type: String
    AllowedPattern: "\
      ^(1?\\d{0,2}|2[0-4]\\d|25[0-5])(\\.(1?\\d{0,2}|2[0-4]\\d|25[0-5])){3}/([1-2]?[0-9]|3[0-2])\
      (,(1?\\d{0,2}|2[0-4]\\d|25[0-5])(\\.(1?\\d{0,2}|2[0-4]\\d|25[0-5])){3}/([1-2]?[0-9]|3[0-2]))*$"
    Default: 0.0.0.0/0
  DataBucketName:
    Description: "The name of the data bucket to reuse when re-creating this template"
    Type: String
    AllowedPattern: ^([a-z0-9][a-z0-9-]*[a-z0-9](\.[a-z0-9][a-z0-9-]*[a-z0-9])*)?$
    MaxLength: 63
    Default: ''
  ClusterCores:
    Description: "Maximum combined number of cores for compute clusters"
    Type: Number
    MinValue: 2
    Default: 256
  SpotBidPercent:
    Description: "Maximum spot bid percentage for compute clusters"
    Type: Number
    MinValue: 1
    MaxValue: 100
    Default: 40
  Auth0Domain:
    Description: "Your Auth0 domain name (*)"
    Type: String
    AllowedPattern: ^[a-z][a-z0-9\.]*\.[a-z]+$
  Auth0Connections:
    Description: "Comma-separated names of Auth0 connections for frontend authentication \
      [without spaces] (*)"
    Type: String
    AllowedPattern: ^[\w-]+(,[\w-]+)*$
    Default: google-oauth2
  Auth0ManagementClientID:
    Description: "Your Auth0 Management cliend ID (*)"
    Type: String
    MinLength: 1
  Auth0ManagementClientSecret:
    Description: "Your Auth0 Management cliend secret (*)"
    Type: String
    NoEcho: true
    MinLength: 1
  Auth0UserTokenLifetime:
    Description: "Number of seconds that user tokens are valid for (*)"
    Type: Number
    MinValue: 1
    Default: 36000
  AuthTokenLifetime:
    Description: "Number of seconds that authentication tokens are valid for (*)"
    Type: Number
    MinValue: 1
    Default: 36000
    MaxValue: 86400

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Repositories"
        Parameters:
          - BackendRepo
          - FrontendRepo
          - FrontendAuthRepo
          - AppsRepo
      -
        Label:
          default: "Administration"
        Parameters:
          - StackAdmin
          - NotificationEmail
      -
        Label:
          default: "Network"
        Parameters:
          - BetaVPCRange
          - ProductionVPCRange
      -
        Label:
          default: "Web"
        Parameters:
          - Domain
          - HostedZone
          - WebTTL
          - WebPriceClass
          - WebLocations
          - WebFirewallRanges
      -
        Label:
          default: "Data"
        Parameters:
          - DataBucketName
      -
        Label:
          default: "Compute"
        Parameters:
          - ClusterCores
          - SpotBidPercent
      -
        Label:
          default: "Auth0"
        Parameters:
          - Auth0Domain
          - Auth0Connections
          - Auth0ManagementClientID
          - Auth0ManagementClientSecret
          - Auth0UserTokenLifetime
          - AuthTokenLifetime

Conditions:
  CreateNotification: !Not [!Equals [!Ref NotificationEmail, '']]
  CreateHostedZone: !Equals [!Ref HostedZone, '']
  CreateDataBucket: !Equals [!Ref DataBucketName, '']

Resources:
  BackendArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  FrontendArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  SecretsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  BetaWebBucket:
    Type: AWS::S3::Bucket

  ReleaseWebBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  BetaDataBucket:
    Type: AWS::S3::Bucket

  DataBucket:
    Type: AWS::S3::Bucket
    Condition: CreateDataBucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub data.${Domain}

  DomainZone:
    Type: AWS::Route53::HostedZone
    Condition: CreateHostedZone
    DeletionPolicy: Retain
    Properties:
      Name: !Ref Domain

  WebACL:
    Type: AWS::WAF::WebACL
    Properties:
      Name: !Sub 'Web ACL for ${Domain} and beta.${Domain}'
      MetricName: WebACL
      DefaultAction:
        Type: BLOCK
      Rules:
      - Action:
          Type: ALLOW
        Priority: 1
        RuleId: !Ref WebACLRule

  WebACLRule:
    Type: AWS::WAF::Rule
    Properties:
      Name: !Sub "'Allow' rule for ${Domain} and beta.${Domain}"
      MetricName: WebACLAllowRule
      Predicates:
      - DataId: !Ref WebIPSetWhitelist
        Negated: false
        Type: IPMatch

  WebIPSetWhitelist:
    Type: AWS::WAF::IPSet
    Properties:
      Name: !Sub 'IP whitelist for ${Domain} and beta.${Domain}'
      IPSetDescriptors: !GetAtt WebIPSets.Descriptors

  WebIPSets:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GetIPSetDescriptors.Arn
      CIDRs: !Ref WebFirewallRanges

  GetIPSetDescriptors:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      Role: !GetAtt LambdaBasicExecutionRole.Arn
      Code:
        ZipFile: !Sub |
          const response = require('cfn-response');
          exports.handler = (event, context) => {
            Promise.resolve(event.ResourceProperties.CIDRs)
              .then(CIDRs => CIDRs.split(',').map(CIDR => ({
                Type: 'IPV4',
                Value: CIDR,
              })))
              .then(descriptors => response.send(event, context, response.SUCCESS, {
                Descriptors: descriptors,
              }))
              .catch(err => {
                console.log(err);
                response.send(event, context, response.FAILED);
              });
          };

  SearchDomain:
    Type: AWS::CloudFormation::CustomResource
    DeletionPolicy: Retain
    Properties:
      ServiceToken: !GetAtt SetupSearchDomain.Arn

  SetupSearchDomain:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      Role: !GetAtt SetupSearchDomainRole.Arn
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const crypto = require("crypto");
          const response = require('cfn-response');
          const cloudsearch = new AWS.CloudSearch();
          exports.handler = (event, context) => {
            const domainName = 'search-' + crypto.randomBytes(10).toString('hex');
            Promise.resolve()
              .then(() => cloudsearch.createDomain({
                DomainName: domainName,
              }).promise())
              .then(() => response.send(event, context, response.SUCCESS, {
                Name: domainName,
              }))
              .catch(err => {
                console.log(err);
                response.send(event, context, response.FAILED);
              });
          };

  PipelineNotification:
    Type: AWS::SNS::Topic
    Condition: CreateNotification
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email

  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: backend
      RoleArn: !GetAtt BackendPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BackendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref BackendRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BackendBuildBetaProject
              InputArtifacts:
                - Name: Source
              RunOrder: 1
            -
              Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 2
            -
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Deploy
                StackName: backend-beta
              RunOrder: 3
        -
          Name: Release
          Actions:
            -
              Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BackendBuildReleaseProject
              InputArtifacts:
                - Name: Source
              RunOrder: 1
            -
              Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 2
            -
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: Deploy
                StackName: backend-release
              RunOrder: 3

  BackendBuildBetaProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: backend-beta
      ServiceRole: !Ref BackendBuildRole
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:6.3.1
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: STACK_NAME
            Value: backend-beta
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: DEPLOYMENT_ROLE_ARN
            Value: !GetAtt BackendDeploymentRole.Arn
          - Name: VPC_RANGE
            Value: !Ref BetaVPCRange
          - Name: ENCRYPTION_KEY_ID
            Value: !Ref EncryptionKey
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: SSH_KEY_GET_ROLE_ARN
            Value: !GetAtt SSHKeyGetRole.Arn
          - Name: SSH_KEY_PUT_ROLE_ARN
            Value: !GetAtt SSHKeyPutRole.Arn
          - Name: DOMAIN_ZONE
            Value: !If [CreateHostedZone, !Ref DomainZone, !Ref HostedZone]
          - Name: WEB_DOMAIN
            Value: !Sub beta.${Domain}
          - Name: WEB_BUCKET
            Value: !Ref BetaWebBucket
          - Name: WEB_TTL
            Value: !Ref WebTTL
          - Name: WEB_PRICE_CLASS
            Value: !Ref WebPriceClass
          - Name: WEB_LOCATIONS
            Value: !Ref WebLocations
          - Name: WEB_ACL
            Value: !Ref WebACL
          - Name: WEB_SIGNING_KEY_GET_ROLE_ARN
            Value: !GetAtt WebSigningKeyGetRole.Arn
          - Name: WEB_SIGNING_KEY_PUT_ROLE_ARN
            Value: !GetAtt WebSigningKeyPutRole.Arn
          - Name: AUTHORIZER_INVOCATION_ROLE_ARN
            Value: !GetAtt AuthorizerInvocationRole.Arn
          - Name: DATA_BUCKET
            Value: !Ref BetaDataBucket
          - Name: CLUSTER_CORES
            Value: !Ref ClusterCores
          - Name: SPOT_BID_PERCENT
            Value: !Ref SpotBidPercent
          - Name: AUTH_TOKEN_LIFETIME
            Value: !Ref AuthTokenLifetime
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_MANAGEMENT_CLIENT_ID
            Value: !Ref Auth0ManagementClientID
          - Name: AUTH0_MANAGEMENT_CLIENT_SECRET
            Value: !Ref Auth0ManagementClientSecret
          - Name: AUTH0_USER_TOKEN_LIFETIME
            Value: !Ref Auth0UserTokenLifetime
          - Name: AUTH0_PUT_SECRET_ROLE_ARN
            Value: !GetAtt Auth0PutSecretRole.Arn
          - Name: AUTH0_GET_MANAGEMENT_SECRET_ROLE_ARN
            Value: !GetAtt Auth0GetManagementSecretRole.Arn
          - Name: AUTH0_CREATE_CLIENT_ROLE_ARN
            Value: !GetAtt Auth0CreateClientRole.Arn
          - Name: SEARCH_DOMAIN
            Value: !GetAtt SearchDomain.Name
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE

  BackendBuildReleaseProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: backend-release
      ServiceRole: !Ref BackendBuildRole
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:6.3.1
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: STACK_NAME
            Value: backend-release
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: DEPLOYMENT_ROLE_ARN
            Value: !GetAtt BackendDeploymentRole.Arn
          - Name: VPC_RANGE
            Value: !Ref ProductionVPCRange
          - Name: ENCRYPTION_KEY_ID
            Value: !Ref EncryptionKey
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: SSH_KEY_GET_ROLE_ARN
            Value: !GetAtt SSHKeyGetRole.Arn
          - Name: SSH_KEY_PUT_ROLE_ARN
            Value: !GetAtt SSHKeyPutRole.Arn
          - Name: DOMAIN_ZONE
            Value: !If [CreateHostedZone, !Ref DomainZone, !Ref HostedZone]
          - Name: WEB_DOMAIN
            Value: !Sub ${Domain}
          - Name: WEB_BUCKET
            Value: !Ref ReleaseWebBucket
          - Name: WEB_TTL
            Value: !Ref WebTTL
          - Name: WEB_PRICE_CLASS
            Value: !Ref WebPriceClass
          - Name: WEB_LOCATIONS
            Value: !Ref WebLocations
          - Name: WEB_ACL
            Value: !Ref WebACL
          - Name: WEB_SIGNING_KEY_GET_ROLE_ARN
            Value: !GetAtt WebSigningKeyGetRole.Arn
          - Name: AUTHORIZER_INVOCATION_ROLE_ARN
            Value: !GetAtt AuthorizerInvocationRole.Arn
          - Name: DATA_BUCKET
            Value: !If [CreateDataBucket, !Ref DataBucket, !Ref DataBucketName]
          - Name: CLUSTER_CORES
            Value: !Ref ClusterCores
          - Name: SPOT_BID_PERCENT
            Value: !Ref SpotBidPercent
          - Name: AUTH_TOKEN_LIFETIME
            Value: !Ref AuthTokenLifetime
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_MANAGEMENT_CLIENT_ID
            Value: !Ref Auth0ManagementClientID
          - Name: AUTH0_USER_TOKEN_LIFETIME
            Value: !Ref Auth0UserTokenLifetime
          - Name: AUTH0_PUT_SECRET_ROLE_ARN
            Value: !GetAtt Auth0PutSecretRole.Arn
          - Name: AUTH0_GET_MANAGEMENT_SECRET_ROLE_ARN
            Value: !GetAtt Auth0GetManagementSecretRole.Arn
          - Name: AUTH0_CREATE_CLIENT_ROLE_ARN
            Value: !GetAtt Auth0CreateClientRole.Arn
          - Name: SEARCH_DOMAIN
            Value: !GetAtt SearchDomain.Name
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE

  EncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/backend
      TargetKeyId: !Ref EncryptionKey

  EncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:user/${StackAdmin}
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt SSHKeyPutRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt SSHKeyGetRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt Auth0PutSecretRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt Auth0CreateClientRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-client.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt Auth0GetManagementSecretRole.Arn
                - !GetAtt Auth0CreateClientRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt FrontendAuthBuildRole.Arn
                - !GetAtt FrontendBuildRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-api-test-client.key
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt WebSigningKeyPutRole.Arn
            Action:
              - kms:GenerateDataKey
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: !GetAtt WebSigningKeyGetRole.Arn
            Action:
              - kms:Decrypt
            Condition:
              StringEquals:
                'kms:ViaService': !Sub s3.${AWS::Region}.amazonaws.com
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
            Resource: '*'

  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  SetupSearchDomainRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SetupSearchDomainPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudsearch:CreateDomain
                  - cloudsearch:DescribeDomains
                Resource:
                  - !Sub arn:aws:cloudsearch:${AWS::Region}:${AWS::AccountId}:domain/search-*

  BackendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${BackendRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt BackendBuildBetaProject.Arn
                  - !GetAtt BackendBuildReleaseProject.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-beta/*
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-release/*
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  BackendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/backend/Source/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/templates/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/lambda/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/templates/*
              - Effect: Allow
                Action:
                  - cloudformation:ValidateTemplate
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DeleteChangeSet
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/backend-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt BackendDeploymentRole.Arn

  BackendDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeployPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:UpdateAssumeRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PassRole
                  - iam:DeleteRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-beta-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-release-*
              - Effect: Allow
                Action:
                  - iam:CreateInstanceProfile
                  - iam:GetInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:DeleteInstanceProfile
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/backend-beta-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/backend-release-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt SSHKeyPutRole.Arn
                  - !GetAtt SSHKeyGetRole.Arn
                  - !GetAtt Auth0PutSecretRole.Arn
                  - !GetAtt Auth0GetManagementSecretRole.Arn
                  - !GetAtt Auth0CreateClientRole.Arn
                  - !GetAtt WebSigningKeyPutRole.Arn
                  - !GetAtt WebSigningKeyGetRole.Arn
                  - !GetAtt AuthorizerInvocationRole.Arn
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                Condition:
                  ArnLike:
                    'iam:PolicyArn':
                      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
                      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
                      - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
                      - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole
                      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-beta-*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/backend-release-*
              - Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                Resource:
                  - !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/lambda/*
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/templates/*
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}
                  - !Sub arn:aws:s3:::backend-beta-*
                  - !Sub arn:aws:s3:::backend-release-*
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:UpdateTable
                  - dynamodb:DescribeTable
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/backend-*
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:backend-*
              - Effect: Allow
                Action:
                  - lambda:GetEventSourceMapping
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:UpdateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                Condition:
                  StringLike:
                    'lambda:FunctionArn': !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:backend-*
                Resource: '*'
              - Effect: Allow
                Action:
                  - events:DescribeRule
                  - events:PutRule
                  - events:DeleteRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/backend-*
              - Effect: Allow
                Action:
                  - ec2:CreateVpc
                  - ec2:CreateVpcEndpoint
                  - ec2:CreateRouteTable
                  - ec2:CreateRoute
                  - ec2:CreateInternetGateway
                  - ec2:CreateTags
                  - ec2:DescribeVpcs
                  - ec2:DescribeVpcEndpoints
                  - ec2:DescribeRouteTables
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeAccountAttributes
                  - ec2:AttachInternetGateway
                  - ec2:ModifyVpcAttribute
                  - ec2:DeleteVpc
                  - ec2:DeleteVpcEndpoints
                  - ec2:DetachInternetGateway
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DeleteRouteTable
                  - ec2:DeleteRoute
                  - ec2:DeleteInternetGateway
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
              - Effect: Allow
                Action:
                  - ec2:DescribeKeyPairs
                Resource: '*'
              - Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:PATCH
                  - apigateway:DELETE
                Resource:
                  - !Sub arn:aws:apigateway:${AWS::Region}::/restapis*
                  - !Sub arn:aws:apigateway:${AWS::Region}::/usageplans*
                  - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames*
              - Effect: Allow
                Action:
                  - acm:RequestCertificate
                  - acm:DescribeCertificate
                  - acm:DeleteCertificate
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudfront:CreateDistribution
                  - cloudfront:GetDistribution
                  - cloudfront:GetDistributionConfig
                  - cloudfront:UpdateDistribution
                  - cloudfront:DeleteDistribution
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                Resource:
                  - !If
                    - CreateHostedZone
                    - !Sub arn:aws:route53:::hostedzone/${DomainZone}
                    - !Sub arn:aws:route53:::hostedzone/${HostedZone}
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource: '*'
              - Effect: Allow
                Action:
                  - waf:GetWebACL
                Resource:
                  - !Sub arn:aws:waf::${AWS::AccountId}:webacl/${WebACL}
              - Effect: Allow
                Action:
                  - cognito-idp:CreateUserPool
                  - cognito-idp:DescribeUserPool
                  - cognito-idp:UpdateUserPool
                  - cognito-idp:DeleteUserPool
                  - cognito-idp:CreateUserPoolClient
                  - cognito-idp:DescribeUserPoolClient
                  - cognito-idp:UpdateUserPoolClient
                  - cognito-idp:DeleteUserPoolClient
                Resource: '*'

  SSHKeyPutRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SSHKeyPutPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ec2:CreateKeyPair
                Resource: '*'
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem

  SSHKeyGetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: SSHKeyGetPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/ssh/*.pem

  Auth0PutSecretRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0PutSecretPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*

  Auth0GetManagementSecretRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0GetManagementSecretPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key

  Auth0CreateClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Auth0CreateClientPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/manage.key
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-client.key

  WebSigningKeyPutRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WebSigningKeyPutPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/web/*.pem
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/web/*.pub

  WebSigningKeyGetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WebSigningKeyGetPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${SecretsBucket}/web/signing.pem
              - Effect: Allow
                Action: cloudfront:GetDistribution
                Resource: '*'

  AuthorizerInvocationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AuthorizerInvocationPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*-Authorizer

  AppsPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: apps
      RoleArn: !GetAtt AppsPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref BackendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref AppsRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Beta
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref AppsBetaBuildProject
              InputArtifacts:
                - Name: Source
        -
          Name: Approval
          Actions:
            - Name: ApproveRelease
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
        -
          Name: Release
          Actions:
            -
              Name: Release
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref AppsReleaseBuildProject
              InputArtifacts:
                - Name: Source

  AppsBetaBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub apps-beta
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/docker:1.12.1
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: backend-beta
      ServiceRole: !Ref AppsBuildRole

  AppsReleaseBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub apps-release
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/docker:1.12.1
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: backend-release
      ServiceRole: !Ref AppsBuildRole

  AppsPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AppsPipelineRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${AppsRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/apps/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt AppsBetaBuildProject.Arn
                  - !GetAtt AppsReleaseBuildProject.Arn
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  AppsBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AppsBuildRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}
                Condition:
                  StringLike:
                    's3:prefix': apps/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/apps/*
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:CreateRepository
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:DescribeImages
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource:
                  - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/backend-*

  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: frontend
      RoleArn: !GetAtt FrontendPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref FrontendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref FrontendRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Beta
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendBetaBuildProject
              InputArtifacts:
                - Name: Source
        -
          Name: Approval
          Actions:
            - Name: ApproveRelease
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
        -
          Name: Release
          Actions:
            -
              Name: Release
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendReleaseBuildProject
              InputArtifacts:
                - Name: Source

  FrontendBetaBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendRepo}-beta
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: backend-beta
          - Name: API_DOMAIN
            Value: !Sub api.beta.${Domain}
          - Name: TOKEN_LIFETIME
            Value: !Ref AuthTokenLifetime
          - Name: WEB_BUCKET
            Value: !Ref BetaWebBucket
      ServiceRole: !Ref FrontendBuildRole

  FrontendReleaseBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendRepo}-release
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: backend-release
          - Name: API_DOMAIN
            Value: !Sub api.${Domain}
          - Name: TOKEN_LIFETIME
            Value: !Ref AuthTokenLifetime
          - Name: WEB_BUCKET
            Value: !Ref ReleaseWebBucket
      ServiceRole: !Ref FrontendBuildRole

  FrontendPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FrontendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${FrontendRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt FrontendBetaBuildProject.Arn
                  - !GetAtt FrontendReleaseBuildProject.Arn
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  FrontendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}/*
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}/*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}
              - Effect: Allow
                Action:
                  - cloudformation:ListExports
                Resource: '*'
              - Effect: Allow
                Action:
                  - cognito-idp:DescribeUserPoolClient
                Resource: '*'

  FrontendAuthPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: frontend-auth
      RoleArn: !GetAtt FrontendAuthPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref FrontendArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        -
          Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Ref FrontendAuthRepo
                BranchName: master
              OutputArtifacts:
                - Name: Source
        -
          Name: Beta
          Actions:
            -
              Name: Beta
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendAuthBetaBuildProject
              InputArtifacts:
                - Name: Source
        -
          Name: Approval
          Actions:
            - Name: ApproveRelease
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !If
                  - CreateNotification
                  - !Ref PipelineNotification
                  - !Ref AWS::NoValue
              RunOrder: 1
        -
          Name: Release
          Actions:
            -
              Name: Release
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FrontendAuthReleaseBuildProject
              InputArtifacts:
                - Name: Source

  FrontendAuthBetaBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendAuthRepo}-beta
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: WEB_BUCKET
            Value: !Ref BetaWebBucket
          - Name: STACK_NAME
            Value: backend-beta
          - Name: API_DOMAIN
            Value: !Sub api.beta.${Domain}
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_CONNECTIONS
            Value: !Ref Auth0Connections
      ServiceRole: !Ref FrontendAuthBuildRole

  FrontendAuthReleaseBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${FrontendAuthRepo}-release
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/nodejs:7.0.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref BackendArtifactsBucket
          - Name: SECRETS_BUCKET
            Value: !Ref SecretsBucket
          - Name: WEB_BUCKET
            Value: !Ref ReleaseWebBucket
          - Name: STACK_NAME
            Value: backend-release
          - Name: API_DOMAIN
            Value: !Sub api.${Domain}
          - Name: AUTH0_DOMAIN
            Value: !Ref Auth0Domain
          - Name: AUTH0_CONNECTIONS
            Value: !Ref Auth0Connections
      ServiceRole: !Ref FrontendAuthBuildRole

  FrontendAuthPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FrontendPipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${FrontendAuthRepo}
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt FrontendAuthBetaBuildProject.Arn
                  - !GetAtt FrontendAuthReleaseBuildProject.Arn
              - !If
                - CreateNotification
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource:
                    - !Ref PipelineNotification
                - !Ref AWS::NoValue

  FrontendAuthBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/auth0/*-spa.id
                  - !Sub arn:aws:s3:::${BackendArtifactsBucket}/auth0/*-api-test-client.id
                  - !Sub arn:aws:s3:::${SecretsBucket}/auth0/*-api-test-client.key
                  - !Sub arn:aws:s3:::${FrontendArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}/login.*
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}/login.*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BetaWebBucket}
                  - !Sub arn:aws:s3:::${ReleaseWebBucket}

Outputs:
  BackendPipelineUrl:
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${BackendPipeline}'
  FrontendPipelineUrl:
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${FrontendPipeline}'
  SearchDomain:
    Value: !GetAtt SearchDomain.Name
  DataBucket:
    Value: !If
      - CreateDataBucket
      - !Ref DataBucket
      - !Ref DataBucketName
