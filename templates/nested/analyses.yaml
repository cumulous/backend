Parameters:
  BackendStack:
    Type: String
  ArtifactsBucket:
    Type: String
  DataBucket:
    Type: String
  LambdaPackage:
    Type: String
  WebDomain:
    Type: String
  ApiId:
    Type: String
  ApiStage:
    Type: String
  SearchDomain:
    Type: String
  SearchUploadDocumentsFunction:
    Type: String
  SearchQueryEndpoint:
    Type: String
  SearchStackSuffix:
    Type: String
  PipelinesTable:
    Type: String
  JobQueue:
    Type: String

Mappings:
  StackMap:
    backend-beta:
      AnalysesReadCapacity: 1
      AnalysesWriteCapacity: 1
    backend-release:
      AnalysesReadCapacity: 5
      AnalysesWriteCapacity: 5

Resources:
  AnalysesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap
          - StackMap
          - !Ref BackendStack
          - AnalysesReadCapacity
        WriteCapacityUnits: !FindInMap
          - StackMap
          - !Ref BackendStack
          - AnalysesWriteCapacity
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  AnalysesTableStreamMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt AnalysesTable.StreamArn
      FunctionName: !Ref SearchUploadDocumentsFunction
      StartingPosition: TRIM_HORIZON
      BatchSize: 100

  CreateAnalysis:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${BackendStack}-CreateAnalysis
      Handler: analyses.create
      Timeout: 20
      Environment:
        Variables:
          ANALYSES_TABLE: !Ref AnalysesTable
          WEB_DOMAIN: !Ref WebDomain
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt CreateAnalysisRole.Arn

  CreateAnalysisRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CreateAnalysisRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: dynamodb:PutItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AnalysesTable}

  CreateAnalysisPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateAnalysis
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/${ApiStage}/POST/analyses

  ListAnalyses:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${BackendStack}-ListAnalyses
      Handler: analyses.list
      Timeout: 30
      Environment:
        Variables:
          SEARCH_QUERY_ENDPOINT: !Ref SearchQueryEndpoint
          SEARCH_STACK_SUFFIX: !Ref SearchStackSuffix
          WEB_DOMAIN: !Ref WebDomain
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt ListAnalysesRole.Arn

  ListAnalysesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ListAnalysesRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudsearch:search
                Resource:
                  - !Sub arn:aws:cloudsearch:${AWS::Region}:${AWS::AccountId}:domain/${SearchDomain}

  ListAnalysesPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ListAnalyses
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/${ApiStage}/GET/analyses

  SubmitExecution:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${BackendStack}-Analyses-SubmitExecution
      Handler: analyses.submitExecution
      Timeout: 20
      Environment:
        Variables:
          ANALYSES_TABLE: !Ref AnalysesTable
          PIPELINES_TABLE: !Ref PipelinesTable
          STATE_MACHINE: !Ref ExecuteAnalysisStateMachine
          WEB_DOMAIN: !Ref WebDomain
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt SubmitExecutionRole.Arn

  SubmitExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SubmitExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: dynamodb:GetItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${PipelinesTable}
              - Effect: Allow
                Action: dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AnalysesTable}
              - Effect: Allow
                Action: states:StartExecution
                Resource:
                  - !Ref ExecuteAnalysisStateMachine

  SubmitExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SubmitExecution
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/${ApiStage}/POST/analyses/{analysis_id}/execution

  CancelExecution:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${BackendStack}-Analyses-CancelExecution
      Handler: analyses.cancelExecution
      Timeout: 30
      Environment:
        Variables:
          ANALYSES_TABLE: !Ref AnalysesTable
          WEB_DOMAIN: !Ref WebDomain
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt CancelExecutionRole.Arn

  CancelExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CancelExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AnalysesTable}
              - Effect: Allow
                Action: batch:TerminateJob
                Resource:
                  - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:/v1/terminatejob

  CancelExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CancelExecution
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/${ApiStage}/DELETE/analyses/{analysis_id}/execution

  CreateRoleForAnalysis:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.createRole
      Timeout: 20
      Environment:
        Variables:
          STACK_NAME: !Ref BackendStack
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt CreateRoleForAnalysisRole.Arn

  CreateRoleForAnalysisRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CreateRoleForAnalysisRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:CreateRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${BackendStack}-analysis-*

  SetRolePolicy:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.setRolePolicy
      Timeout: 20
      Environment:
        Variables:
          STACK_NAME: !Ref BackendStack
          DATA_BUCKET: !Ref DataBucket
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt SetRolePolicyRole.Arn

  SetRolePolicyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SetRolePolicyRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:PutRolePolicy
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${BackendStack}-analysis-*

  DeleteRolePolicy:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.deleteRolePolicy
      Timeout: 20
      Environment:
        Variables:
          STACK_NAME: !Ref BackendStack
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt DeleteRolePolicyRole.Arn

  DeleteRolePolicyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DeleteRolePolicyRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:DeleteRolePolicy
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${BackendStack}-analysis-*

  DeleteRoleForAnalysis:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.deleteRole
      Timeout: 20
      Environment:
        Variables:
          STACK_NAME: !Ref BackendStack
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt DeleteRoleForAnalysisRole.Arn

  DeleteRoleForAnalysisRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DeleteRoleForAnalysisRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: iam:DeleteRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${BackendStack}-analysis-*

  DefineJobs:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.defineJobs
      Timeout: 60
      Environment:
        Variables:
          ACCOUNT_ID: !Ref AWS::AccountId
          STACK_NAME: !Ref BackendStack
          DATA_BUCKET: !Ref DataBucket
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt DefineJobsRole.Arn

  DefineJobsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DefineJobsRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: batch:RegisterJobDefinition
                Resource:
                  - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:/registerjobdefinition
              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${BackendStack}-analysis-*

  SubmitJobs:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.submitJobs
      Timeout: 60
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt SubmitJobsRole.Arn

  SubmitJobsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SubmitJobsRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: batch:SubmitJob
                Resource:
                  - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:/v1/submitjob

  DescribeJobs:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.describeJobs
      Timeout: 60
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt DescribeJobsRole.Arn

  DescribeJobsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DescribeJobsRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - batch:DescribeJobs
                Resource: '*'

  CheckJobsUpdated:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.checkJobsUpdated
      Timeout: 30
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt LambdaBasicExecutionRole.Arn

  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CalculateStatus:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.calculateStatus
      Timeout: 30
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt LambdaBasicExecutionRole.Arn

  UpdateStatus:
    Type: AWS::Lambda::Function
    Properties:
      Handler: analyses.updateStatus
      Timeout: 30
      Environment:
        Variables:
          ANALYSES_TABLE: !Ref AnalysesTable
      Runtime: nodejs6.10
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Ref LambdaPackage
      Role: !GetAtt UpdateStatusRole.Arn

  UpdateStatusRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: UpdateStatusRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AnalysesTable}

  ExecuteAnalysisRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StartAnalysisRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt CreateRoleForAnalysis.Arn
                  - !GetAtt SetRolePolicy.Arn
                  - !GetAtt DeleteRolePolicy.Arn
                  - !GetAtt DeleteRoleForAnalysis.Arn
                  - !GetAtt DefineJobs.Arn
                  - !GetAtt SubmitJobs.Arn
                  - !GetAtt DescribeJobs.Arn
                  - !GetAtt CheckJobsUpdated.Arn
                  - !GetAtt CalculateStatus.Arn
                  - !GetAtt UpdateStatus.Arn

  ExecuteAnalysisStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt ExecuteAnalysisRole.Arn
      DefinitionString: !Sub |-
        {
          "StartAt": "CreateRoleForAnalysis",
          "States": {
            "CreateRoleForAnalysis": {
              "Type": "Task",
              "InputPath": "$.analysis_id",
              "ResultPath": null,
              "Resource": "${CreateRoleForAnalysis.Arn}",
              "Next": "SetRolePolicy"
            },
            "SetRolePolicy": {
              "Type": "Task",
              "ResultPath": null,
              "Resource": "${SetRolePolicy.Arn}",
              "Next": "ScheduleJobs",
              "Catch": [{
                "ErrorEquals": [ "States.ALL" ],
                "ResultPath": "$.error",
                "Next": "DeleteRole"
              }]
            },
            "ScheduleJobs": {
              "Type": "Parallel",
              "Branches": [{
                "StartAt": "DefineJobs",
                "States": {
                  "DefineJobs": {
                    "Type": "Task",
                    "ResultPath": "$.jobDefinitions",
                    "Resource": "${DefineJobs.Arn}",
                    "Next": "PassJobQueue"
                  },
                  "PassJobQueue": {
                    "Type": "Pass",
                    "Result": "${JobQueue}",
                    "ResultPath": "$.jobQueue",
                    "Next": "SubmitJobs"
                  },
                  "SubmitJobs": {
                    "Type": "Task",
                    "ResultPath": "$.jobIds",
                    "Resource": "${SubmitJobs.Arn}",
                    "Next": "DescribeSubmittedJobs"
                  },
                  "DescribeSubmittedJobs": {
                    "Type": "Task",
                    "ResultPath": "$.jobs",
                    "Resource": "${DescribeJobs.Arn}",
                    "Next": "CalculateStatus"
                  },
                  "DescribeJobs": {
                    "Type": "Task",
                    "ResultPath": "$.jobs",
                    "Resource": "${DescribeJobs.Arn}",
                    "Next": "CheckJobsUpdated"
                  },
                  "CheckJobsUpdated": {
                    "Type": "Task",
                    "ResultPath": "$.changed",
                    "Resource": "${CheckJobsUpdated.Arn}",
                    "Next": "ChooseIfUpdated"
                  },
                  "ChooseIfUpdated": {
                    "Type": "Choice",
                    "Choices": [{
                      "Variable": "$.changed",
                      "BooleanEquals": true,
                      "Next": "CalculateStatus"
                    }],
                    "Default": "PassOldJobs"
                  },
                  "PassOldJobs": {
                    "Type": "Pass",
                    "InputPath": "$.jobs",
                    "ResultPath": "$.oldJobs",
                    "Next": "Wait"
                  },
                  "Wait": {
                    "Type": "Wait",
                    "Seconds": 30,
                    "Next": "DescribeJobs"
                  },
                  "CalculateStatus": {
                    "Type": "Task",
                    "ResultPath": "$.analysis",
                    "Resource": "${CalculateStatus.Arn}",
                    "Next": "UpdateStatus"
                  },
                  "UpdateStatus": {
                    "Type": "Task",
                    "ResultPath": "$.error.Cause",
                    "Resource": "${UpdateStatus.Arn}",
                    "Next": "CheckTerminated"
                  },
                  "CheckTerminated": {
                    "Type": "Choice",
                    "Choices": [{
                      "Or": [{
                        "Variable": "$.analysis.status",
                        "StringEquals": "succeeded"
                      }, {
                        "Variable": "$.analysis.status",
                        "StringEquals": "failed"
                      }],
                      "Next": "Exit"
                    }],
                    "Default": "PassOldJobs"
                  },
                  "Exit": {
                    "Type": "Succeed"
                  }
                }
              }],
              "Catch": [{
                "ErrorEquals": [ "States.ALL" ],
                "ResultPath": "$.error",
                "Next": "PassFailureStatus"
              }],
              "Next": "Succeed"
            },
            "Succeed": {
              "InputPath": "$.[0]",
              "Type": "Pass",
              "Next": "DeleteRolePolicy"
            },
            "PassFailureStatus": {
              "Type": "Pass",
              "Result": "failed",
              "ResultPath": "$.analysis.status",
              "Next": "PassFailureReason"
            },
            "PassFailureReason": {
              "Type": "Pass",
              "InputPath": "$.error.Error",
              "ResultPath": "$.analysis.error",
              "Next": "UpdateFinalStatus"
            },
            "UpdateFinalStatus": {
              "Type": "Task",
              "ResultPath": null,
              "Resource": "${UpdateStatus.Arn}",
              "Next": "DeleteRolePolicy",
              "Catch": [{
                "ErrorEquals": [ "States.ALL" ],
                "ResultPath": "$.error",
                "Next": "DeleteRolePolicy"
              }]
            },
            "DeleteRolePolicy": {
              "Type": "Task",
              "InputPath": "$.analysis_id",
              "ResultPath": null,
              "Resource": "${DeleteRolePolicy.Arn}",
              "Next": "DeleteRole"
            },
            "DeleteRole": {
              "Type": "Task",
              "InputPath": "$.analysis_id",
              "ResultPath": null,
              "Resource": "${DeleteRoleForAnalysis.Arn}",
              "Next": "PassError"
            },
            "PassError": {
              "Type": "Pass",
              "InputPath": "$.error",
              "End": true
            }
          }
        }

Outputs:
  Table:
    Value: !Ref AnalysesTable
